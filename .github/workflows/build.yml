name: Build and test

on:
  push:
    branches: [master]
  pull_request:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        id: build-artifacts
        uses: actions/cache@v4
        with:
          path: |
            .venv/
            target/
            ~/.cargo/registry
            ~/.cargo/git
          key: "${{hashFiles('Cargo.lock', 'pyproject.toml')}}"

      - name: Check
        run: cargo check --all-features

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        id: build-artifacts
        uses: actions/cache@v4
        with:
          path: |
            .venv/
            target/
            ~/.cargo/registry
            ~/.cargo/git
          key: "${{hashFiles('Cargo.lock', 'pyproject.toml')}}"

      - name: Lint
        run: cargo clippy --all-features -- -D warnings

  test:
    runs-on: ubuntu-latest
    needs: [check, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - uses: dtolnay/rust-toolchain@stable

      - name: Install poetry
        run: pipx install poetry --python python3.13

      - name: Cache build artifacts
        id: build-artifacts
        uses: actions/cache@v4
        with:
          path: |
            .venv/
            target/
            ~/.cargo/registry
            ~/.cargo/git
          key: "${{hashFiles('Cargo.lock', 'pyproject.toml')}}"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libicu74 libicu-dev

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Install the Python dependencies
        run: |
          poetry env use 3.13
          poetry install --no-root

      - name: Test
        env:
          PYTHONPATH: "./.venv/lib/python3.13/site-packages"
        run: cargo test

  benches:
    runs-on: ubuntu-latest
    needs: [check, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        id: build-artifacts
        uses: actions/cache@v4
        with:
          path: |
            .venv/
            target/
            ~/.cargo/registry
            ~/.cargo/git
          key: "${{hashFiles('Cargo.lock', 'pyproject.toml')}}"

      - name: Benchmarks
        run: cargo bench --features benchmarks

  build:
    runs-on: ubuntu-latest
    needs: [check, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        id: build-artifacts
        uses: actions/cache@v4
        with:
          path: |
            .venv/
            target/
            ~/.cargo/registry
            ~/.cargo/git
          key: "${{hashFiles('Cargo.lock', 'pyproject.toml')}}"

      - name: Build
        run: cargo build --release

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: motiva
          path: target/release/motiva
          retention-days: 7
